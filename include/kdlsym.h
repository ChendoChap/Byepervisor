#pragma once
#ifndef KDLSYM_H
#define KDLSYM_H

typedef enum {
    KERNEL_SYM_DMPML4I,
    KERNEL_SYM_DMPDPI,
    KERNEL_SYM_PML4PML4I,
    KERNEL_SYM_PMAP_STORE,
    KERNEL_SYM_DATA_CAVE,
    KERNEL_SYM_SCESBLAUTHMGRISLOADABLE2,
    KERNEL_SYM_SCESBLAUTHMGRGETSELFINFO,
    KERNEL_SYM_FPU_KERN_ENTER,
    KERNEL_SYM_FPU_KERN_LEAVE,
    KERNEL_SYM_FPU_KERN_CTX,
    KERNEL_SYM_SHA256HMAC,
    KERNEL_SYM_AESCBCCFB128DECRYPT,
    KERNEL_SYM_MTX_LOCK_FLAGS,
    KERNEL_SYM_MTX_UNLOCK_FLAGS,
    KERNEL_SYM_SBL_DRV_MSG_MTX,
    KERNEL_SYM_GPU_VA_PAGE_LIST,
    KERNEL_SYM_SCESBLDRIVERSENDMSG,
    KERNEL_SYM_SCESBLPFSSETKEYS,
    KERNEL_SYM_RSAESPKCS1V15DEC2048CRT,
    KERNEL_SYM_SX_XLOCK,
    KERNEL_SYM_SX_XUNLOCK,
    KERNEL_SYM_AESCBCCFB128ENCRYPT,
    KERNEL_SYM_SCESBLKEYMGRSETKEYFORPFS,
    KERNEL_SYM_SCESBLKEYMGRCLEARKEY,
    KERNEL_SYM_SCESBLKEYMGRSMCALLFUNC,
    KERNEL_SYM_SBL_KEYMGR_KEY_RBTREE,
    KERNEL_SYM_SCESBLKEYMGRSETKEYSTORAGE,
    KERNEL_SYM_SBL_KEYMGR_KEY_SLOTS,
    KERNEL_SYM_SBL_KEYMGR_BUF_VA,
    KERNEL_SYM_SBL_KEYMGR_BUF_GVA,
    KERNEL_SYM_MAX
} ksym_t;

typedef enum {
    KERNEL_PATCH_HAS_MMAP_SELF_CAPABILITY,
    KERNEL_PATCH_IS_ALLOWED_TO_MMAP_SELF,
    KERNEL_PATCH_MMAP_SELF_CALL_IS_LOADABLE,
    KERNEL_PATCH_SYS_GETGID,
    KERNEL_PATCH_MAX
} kpatch_t;

uint64_t kdlsym(ksym_t sym);
uint64_t kdlpatch(kpatch_t patch);
uint64_t ktext(uint64_t offset);

#endif // KDLSYM_H