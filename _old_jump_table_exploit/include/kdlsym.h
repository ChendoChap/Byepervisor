#pragma once
#ifndef KDLSYM_H
#define KDLSYM_H

typedef enum {
    KERNEL_SYM_DMPML4I,
    KERNEL_SYM_DMPDPI,
    KERNEL_SYM_PML4PML4I,
    KERNEL_SYM_DATA_CAVE,
    KERNEL_SYM_PMAP_STORE,
    KERNEL_SYM_HV_JMP_TABLE,
    KERNEL_SYM_HIJACKED_FUNC_PTR,
    KERNEL_SYM_MAX
} ksym_t;

typedef enum {
    KERNEL_GADGET_RET,
    KERNEL_GADGET_INFLOOP,
    KERNEL_GADGET_HYPERCALL_SET_CPUID_PS4,
    KERNEL_GADGET_RETURN_ADDR,
    KERNEL_GADGET_POP_RDI,
    KERNEL_GADGET_POP_RSI,
    KERNEL_GADGET_POP_RDX,
    KERNEL_GADGET_POP_RAX,
    KERNEL_GADGET_POP_RBX,
    KERNEL_GADGET_ADD_RAX_RDX,
    KERNEL_GADGET_MOV_R9_QWORD_PTR_RDI_48,
    KERNEL_GADGET_POP_R12,
    KERNEL_GADGET_MOV_QWORD_PTR_RDI_RSI,
    KERNEL_GADGET_POP_RSP,
    KERNEL_GADGET_MOV_RAX_QWORD_PTR_RAX,
    KERNEL_GADGET_MOV_QWORD_PTR_RAX_0,
    KERNEL_GADGET_SETJMP,
    KERNEL_GADGET_LONGJMP,
    KERNEL_GADGET_JOP1,
    KERNEL_GADGET_JOP2,
    KERNEL_GADGET_MAX
} kgadget_t;

uint64_t kdlsym(ksym_t sym);
uint64_t kdlgadget(kgadget_t gadget);
uint64_t ktext(uint64_t offset);

#endif // KDLSYM_H